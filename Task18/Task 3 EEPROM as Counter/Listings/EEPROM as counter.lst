C51 COMPILER V9.60.0.0   EEPROM_AS_COUNTER                                                 10/22/2021 13:58:54 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE EEPROM_AS_COUNTER
OBJECT MODULE PLACED IN .\Objects\EEPROM as counter.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE EEPROM as counter.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\EEPROM as counter.lst) TABS(2) OBJECT(.\Objects\EEPROM as counter.obj)

line level    source

   1          #include<reg52.h> 
   2          #define PORT P0
   3          
   4          sbit RS = P2^6;
   5          sbit RW = P2^5;
   6          sbit EN = P2^7;
   7          sbit SDA=P2^0;
   8          sbit SCL=P2^1;
   9          
  10          unsigned int  i;
  11          void write( unsigned char Data,unsigned char Address);
  12          unsigned char Read(unsigned char Address);
  13          void Start();
  14          void send_byte(unsigned char Data);
  15          void Delay_ms(long int k);
  16          void Delay_us(long int k);
  17          void setCursor(int a, int b);
  18          void string(const char *p);
  19          unsigned char read_byte();
  20          void I2CNak();
  21          void command(char a);
  22          void stop();
  23          void display(char b);
  24          void initializeLCD();
  25          
  26          void write( unsigned char Data,unsigned char Address)
  27          {
  28   1      
  29   1          Start(); 
  30   1          send_byte(0xA0);  
  31   1          send_byte(Address); 
  32   1          send_byte(Data);    
  33   1          stop();              
  34   1          Delay_ms(5);        
  35   1      }
  36          
  37          unsigned char Read(unsigned char Address)
  38          {
  39   1        unsigned char Data;
  40   1      
  41   1          Start();            
  42   1          send_byte(0xA0);    
  43   1          send_byte(Address); 
  44   1          Start();       
  45   1          send_byte(0xA1);           
  46   1          Data = read_byte(); 
  47   1          I2CNak();
  48   1         stop();            
  49   1          Delay_us(10);
  50   1          return Data;          
  51   1      }
  52          
  53          void main (void)
  54          {
C51 COMPILER V9.60.0.0   EEPROM_AS_COUNTER                                                 10/22/2021 13:58:54 PAGE 2   

  55   1        char Name[]="123456789";
  56   1        
  57   1        initializeLCD();
  58   1        command(0x80);
  59   1        string("EEPROM COUNTER");
  60   1        
  61   1        for(i =0; i<9; i++)
  62   1        write(Name[i],i);
  63   1        
  64   1        command(0xc0);  
  65   1        for(i =0; i<9; i++)
  66   1        {                     
  67   2        display(Read(i));
  68   2        Delay_ms(500);
  69   2        }
  70   1        while(1);
  71   1      }
  72          
  73          void command(char a)
  74          {
  75   1      
  76   1          P0 = a;
  77   1        RS=0;RW=0;EN=1;
  78   1        Delay_ms(8);
  79   1        EN=0;
  80   1      }
  81          
  82          void display(char b)
  83          {
  84   1      
  85   1        P0 = b;
  86   1        RS=1;RW=0;EN=1;
  87   1        Delay_ms(8);
  88   1        EN=0;
  89   1      }
  90          
  91            
  92          void string(const char *p)
  93          {
  94   1      while(*p!='\0')
  95   1      {
  96   2      display(*p);
  97   2      p++;
  98   2      }
  99   1      } 
 100          
 101          void initializeLCD()
 102          {
 103   1        command(0x38);
 104   1        command(0x01);
 105   1        command(0x80);
 106   1        command(0x06);
 107   1        command(0x0C);  
 108   1      }
 109          
 110          
 111          void Start()
 112          {
 113   1        SCL = 0;
 114   1        SDA = 1;
 115   1        Delay_us(1);
 116   1        SCL = 1;
C51 COMPILER V9.60.0.0   EEPROM_AS_COUNTER                                                 10/22/2021 13:58:54 PAGE 3   

 117   1        Delay_us(1);
 118   1        SDA = 0;
 119   1        Delay_us(1);
 120   1        SCL = 0;
 121   1      }
 122          
 123          
 124          
 125          void stop()
 126          {
 127   1        SCL = 0;
 128   1        Delay_us(1);
 129   1        SDA = 0;
 130   1        Delay_us(1);
 131   1        SCL = 1;
 132   1        Delay_us(1);
 133   1        SDA = 1;
 134   1      }
 135           void acknowlegde()
 136          {
 137   1        
 138   1        SDA = 0;
 139   1        Delay_us(1);
 140   1        SCL = 1;
 141   1        Delay_us(1);
 142   1        SCL = 0;
 143   1        SDA = 1;
 144   1      }
 145          
 146          
 147          
 148          void I2CNak()
 149          {
 150   1        SDA = 1;
 151   1        Delay_us(1);
 152   1        SCL = 1;
 153   1        Delay_us(1);
 154   1        SCL = 0;
 155   1        SDA = 1;
 156   1      }
 157          
 158          void send_byte(unsigned char Data)
 159          {
 160   1         unsigned char i;
 161   1         for (i = 0; i < 8; i++) {
 162   2          
 163   2          SDA=Data & 0x80;
 164   2          SCL = 1;
 165   2          SCL = 0;
 166   2          Data<<=1;
 167   2         }
 168   1         acknowlegde();
 169   1      }
 170          
 171          
 172          unsigned char read_byte()
 173          {
 174   1        unsigned char i, Data=0;
 175   1        for (i = 0; i < 8; i++) {
 176   2          Delay_us(1);
 177   2          SCL = 1;
 178   2          Data|=SDA;
C51 COMPILER V9.60.0.0   EEPROM_AS_COUNTER                                                 10/22/2021 13:58:54 PAGE 4   

 179   2          if(i<7)
 180   2          Data<<=1;
 181   2          SCL = 0;
 182   2        }
 183   1        return Data;
 184   1      }
 185          
 186          void Delay_ms(long int k)
 187          {
 188   1          int i;
 189   1        TMOD=0X02;
 190   1        TH0=0x00;
 191   1        while(k!=0)
 192   1        {
 193   2          for(i=0;i<4;i++){
 194   3          TR0=1;
 195   3          while(!TF0);
 196   3          TF0=0;}
 197   2          k--;
 198   2        }
 199   1      }  
 200          
 201          void Delay_us(long int k)
 202          {
 203   1      
 204   1        TMOD=0X02;
 205   1        TH0=256-k;
 206   1        TR0=1;
 207   1        while(!TF0);
 208   1        TF0=0;
 209   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    537    ----
   CONSTANT SIZE    =     25    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      27
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
