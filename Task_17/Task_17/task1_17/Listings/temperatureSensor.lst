C51 COMPILER V9.60.0.0   TEMPERATURESENSOR                                                 10/19/2021 23:52:28 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TEMPERATURESENSOR
OBJECT MODULE PLACED IN .\Objects\temperatureSensor.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE temperatureSensor.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\temperatureSensor.lst) TABS(2) OBJECT(.\Objects\temperatureSensor.obj)

line level    source

   1          #include < reg51.h >
   2          sbit rs = P2^6;
   3          sbit wr=P2^5;
   4          sbit en=P2^7;
   5          sbit led = P2^0;
   6          sbit DQ =P3^7;
   7          sbit Beep = P1^5;
   8          sbit LED1=P2^0;
   9          sbit LED2=P2^1;
  10          sbit LED3=P2^2;
  11          
  12          unsigned int i=0;
  13          unsigned char U,T,H,intpart,decpart;
  14          
  15          
  16          unsigned int index=0;
  17          
  18          void command (char );
  19          unsigned char temp;
  20          void delay_us(unsigned int );
  21          unsigned char temperature;
  22          
  23          void display (char temp)
  24          {
  25   1        P0=temp;      
  26   1        rs=1;           // displaying a character or Data
  27   1        en=1;
  28   1        wr=0;
  29   1        delay_us(5);
  30   1        en=0;
  31   1      }
  32          
  33          void string (char *point)
  34          {
  35   1        while(*point)
  36   1        {
  37   2          display(*point++);
  38   2        }
  39   1      }
  40          
  41          void delay_us(unsigned int z){
  42   1              unsigned int i;
  43   1              for(i=0;i<z;i++);
  44   1      }
  45          
  46          void delay_ms(unsigned int z1){
  47   1              unsigned int i,j;
  48   1              for(i=0;i<z1;i++)
  49   1              for(j=0;j<125;j++);
  50   1      }
  51          
  52          void delay_18B20(unsigned int ud){
  53   1          while(ud--);
  54   1      }
C51 COMPILER V9.60.0.0   TEMPERATURESENSOR                                                 10/19/2021 23:52:28 PAGE 2   

  55          
  56          void Init_18B20(void){
  57   1          DQ = 1;   
  58   1          delay_18B20(8);
  59   1          DQ = 0;   
  60   1          delay_18B20(65);
  61   1          DQ = 1;   
  62   1          delay_18B20(20);    
  63   1      }
  64          
  65          unsigned char Read_temp (void){
  66   1        
  67   1          unsigned char i=0;
  68   1          unsigned char dat = 0;
  69   1          for (i=8;i>0;i--){
  70   2                DQ = 0;
  71   2                dat>>=1;
  72   2                DQ = 1;
  73   2                if(DQ)
  74   2                dat |= 0x80;
  75   2                delay_18B20(4);
  76   2          }
  77   1          return(dat);
  78   1      }
  79          
  80          void Write_temp (unsigned char dat){
  81   1          unsigned char i=0;
  82   1          for (i=8; i>0; i--){
  83   2              DQ = 0;
  84   2              DQ = dat&0x01;
  85   2              delay_18B20(5);
  86   2              DQ = 1;
  87   2              dat>>=1;
  88   2          }
  89   1      }
  90          
  91          void ReadTemperature (void){  
  92   1          unsigned char a=0;
  93   1          unsigned char b=0;
  94   1        
  95   1          Init_18B20();
  96   1          Write_temp(0xCC);    // skip rom   
  97   1          Write_temp(0x44);    //This command initiates a single temperature conversion. 
  98   1          delay_18B20(10); 
  99   1          Init_18B20();
 100   1        
 101   1          Write_temp(0xCC);
 102   1          Write_temp(0xBE);    //This command allows the master to read the contents of  the scratchpad. T
 103   1          delay_18B20(10);
 104   1          a=Read_temp();        //Read temp low value
 105   1          b=Read_temp();  //Read temp high value
 106   1          
 107   1         temperature= ((b*256+a)>>4); // combine the values.    
 108   1      }
 109          
 110          void lcd_init (void)
 111          {
 112   1        command(0x38);      //Use two lines and 5x7 matrix
 113   1        command(0x0c);         // display on
 114   1        command(0x01);      //Clearing the screen
 115   1        command(0x80);       // Force cursor to beginning of the first line
 116   1        command(0xc0);       // 2nd line
C51 COMPILER V9.60.0.0   TEMPERATURESENSOR                                                 10/19/2021 23:52:28 PAGE 3   

 117   1      }
 118          
 119          
 120          void TempShow(unsigned char z){
 121   1         command(0xc0);
 122   1          command(0xc3);
 123   1        H=(z/100) + 0x30; //hundred
 124   1        T=(z%100/10) + 0x30; //ten
 125   1        U=(z%10) + 0x30; //unit
 126   1           intpart = (int)z;
 127   1           decpart = (z - intpart) + 0x30;
 128   1          
 129   1        display(H);
 130   1        display(T);
 131   1        display(U);
 132   1        string(".");
 133   1        display(decpart);
 134   1        //custom Char (degree)
 135   1      command(64);   // CGRAM address where value of the first character is store 0x40 (0xDF Abrar)
 136   1      display(0x03);
 137   1      display(0x03);
 138   1      display(0x00);
 139   1      display(0x00);
 140   1      display(0x00);
 141   1      display(0x00);
 142   1      display(0x00);
 143   1      command(0xc8);
 144   1      display(0);    // for displaying 1st character
 145   1      command(0xc9);
 146   1       string("C");
 147   1        
 148   1      }
 149          
 150          void command (char c)
 151          {
 152   1        P0=c;
 153   1        rs=0;            // To send a command to the LCD
 154   1        en=1;
 155   1        wr=0;            // for write mode wr=0 and for read mode wr=1
 156   1        delay_us(5);
 157   1        en=0;
 158   1      }
 159          
 160          void main(){
 161   1        
 162   1        lcd_init();
 163   1        IE=0x82; // enable timer 0
 164   1        TMOD = 0x01; //using mode 1 16 bit registor 
 165   1        TH0 = 0xff;
 166   1        TL0 = 0x06;
 167   1        TR0=1;
 168   1      
 169   1        while(1);
 170   1      
 171   1      }
 172          void timer0_intrupt (void) interrupt 1   // called after  250u second 
 173          {
 174   1         
 175   1        if ( T >= 0x33)
 176   1        {
 177   2          LED1=0;
 178   2      LED2=0;
C51 COMPILER V9.60.0.0   TEMPERATURESENSOR                                                 10/19/2021 23:52:28 PAGE 4   

 179   2      LED3=0;
 180   2          Beep = 0;
 181   2          delay_ms(1);
 182   2          Beep=1;
 183   2          
 184   2        } 
 185   1        Beep=1; 
 186   1      LED1=1;
 187   1      LED2=1;
 188   1      LED3=1; 
 189   1          index+=1;
 190   1          if (index == 4000)  //make it 1second
 191   1          {
 192   2             command(0x80);
 193   2             string("temperature");
 194   2             ReadTemperature(); 
 195   2             TempShow(temperature);
 196   2             
 197   2               index=0;     
 198   2          }
 199   1              
 200   1        TH0 = 0xff; //reload timer value limit
 201   1        TL0 = 0x06;
 202   1      }
 203          
 204          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    637    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
