C51 COMPILER V9.60.0.0   LAST                                                              10/20/2021 00:13:42 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LAST
OBJECT MODULE PLACED IN .\Objects\Last.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Last.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\Last
                    -.lst) TABS(2) OBJECT(.\Objects\Last.obj)

line level    source

   1          #include <reg51.h >
   2          
   3          //display on lcd 
   4          
   5          sbit rs = P2^6;
   6          sbit wr=P2^5;
   7          sbit en=P2^7;
   8          sbit led = P2^0;
   9          sbit DQ =P3^7;
  10          sbit buz_pin = P1^5;
  11          
  12          unsigned int i=0,j=0;
  13          unsigned char U,T,H,intpart,decpart;
  14            unsigned char value[3];
  15          
  16          
  17          unsigned int index=0;
  18          
  19          void display (char);
  20          void command(char );
  21          unsigned char temp;
  22          void delay_us(unsigned int );
  23          unsigned char temperature;
  24          void string (char *point);
  25          void read_temp_hercules(void);
  26          
  27          void read_temp_hercules (void)
  28          {
  29   1      
  30   1        ES = 1;  // enable the  seraial intrupts
  31   1        TMOD = 0x20;  // timer 1 in mode 2
  32   1        SCON = 0x50;
  33   1        
  34   1        TH1= -3;  //baud rate  9600
  35   1        TR1=1;   //start timer 1
  36   1        
  37   1            
  38   1        
  39   1        for (j=0; j<3 ; j++)
  40   1             {
  41   2           
  42   2              while(RI == 0); 
  43   2              value[j] = SBUF;  //recieved temprature from hercules
  44   2              RI=0;  
  45   2            
  46   2             }
  47   1            H=value[0]; //provide hundert value
  48   1            T=value[1]; //provide tenth value
  49   1            U=value[2]; //provide unit value
  50   1             } 
  51          
  52          
  53          void display (char temp)
  54          {
C51 COMPILER V9.60.0.0   LAST                                                              10/20/2021 00:13:42 PAGE 2   

  55   1        P0=temp;      
  56   1        rs=1;           // displaying a character or Data
  57   1        en=1;
  58   1        wr=0;
  59   1        delay_us(5);
  60   1        en=0;
  61   1      }
  62          
  63          
  64          
  65          void string (char *point)
  66          {
  67   1        while(*point)
  68   1        {
  69   2          display(*point++);
  70   2        }
  71   1      }
  72          
  73          void delay_us(unsigned int z){
  74   1              unsigned int i;
  75   1              for(i=0;i<z;i++);
  76   1      }
  77          
  78          void delay_ms(unsigned int z1){
  79   1              unsigned int i,j;
  80   1              for(i=0;i<z1;i++)
  81   1              for(j=0;j<125;j++);
  82   1      }
  83          
  84          void delay_18B20(unsigned int ud){
  85   1          while(ud--);
  86   1      }
  87          
  88          void Init_18B20(void){
  89   1          DQ = 1;   
  90   1          delay_18B20(8);
  91   1          DQ = 0;   
  92   1          delay_18B20(65);
  93   1          DQ = 1;   
  94   1          delay_18B20(20);    
  95   1      }
  96          
  97          unsigned char Read_temp (void){
  98   1        
  99   1          unsigned char i=0;
 100   1          unsigned char dat = 0;
 101   1          for (i=8;i>0;i--){
 102   2                DQ = 0;
 103   2                dat>>=1;
 104   2                DQ = 1;
 105   2                if(DQ)
 106   2                dat |= 0x80;
 107   2                delay_18B20(4);
 108   2          }
 109   1          return(dat);
 110   1      }
 111          
 112          void Write_temp (unsigned char dat){
 113   1          unsigned char i=0;
 114   1          for (i=8; i>0; i--){
 115   2              DQ = 0;
 116   2              DQ = dat&0x01;
C51 COMPILER V9.60.0.0   LAST                                                              10/20/2021 00:13:42 PAGE 3   

 117   2              delay_18B20(5);
 118   2              DQ = 1;
 119   2              dat>>=1;
 120   2          }
 121   1      }
 122          
 123          void ReadTemperature (void){  
 124   1          unsigned char a=0;
 125   1          unsigned char b=0;
 126   1        
 127   1          Init_18B20();
 128   1          Write_temp(0xCC);    // skip rom   
 129   1          Write_temp(0x44);    //This command initiates a single temperature conversion. 
 130   1          delay_18B20(10); 
 131   1          Init_18B20();
 132   1        
 133   1          Write_temp(0xCC);
 134   1          Write_temp(0xBE);    //This command allows the master to read the contents of  the scratchpad. T
 135   1          delay_18B20(10);
 136   1          a=Read_temp();        //Read temp low value
 137   1          b=Read_temp();  //Read temp high value
 138   1          
 139   1         temperature= ((b*256+a)>>4); // combine the values.    
 140   1      }
 141          
 142          void lcd_init (void)
 143          {
 144   1        command(0x38);      //Use two lines and 5x7 matrix
 145   1        command(0x0c);         // display on
 146   1        command(0x01);      //Clearing the screen
 147   1        command(0x80);       // Force cursor to beginning of the first line
 148   1        command(0xc0);       // 2nd line
 149   1      }
 150          
 151          
 152          void TempShow(void){
 153   1         
 154   1         
 155   1        command(0xc0);
 156   1        display(H);
 157   1        display(T);
 158   1        display(U);
 159   1        //custom Char (degree)
 160   1      command(64);   // CGRAM address where value of the first character is store 0x40 (0xDF Abrar)
 161   1      display(0x03);
 162   1      display(0x03);
 163   1      display(0x00);
 164   1      display(0x00);
 165   1      display(0x00);
 166   1      display(0x00);
 167   1      display(0x00);
 168   1      command(0xc3);
 169   1      display(0);    // for displaying 1st character
 170   1        string("C");
 171   1        
 172   1      }
 173          
 174          void command(char c)
 175          {
 176   1        P0=c;
 177   1        rs=0;            // To send a command to the LCD
 178   1        en=1;
C51 COMPILER V9.60.0.0   LAST                                                              10/20/2021 00:13:42 PAGE 4   

 179   1        wr=0;            // for write mode wr=0 and for read mode wr=1
 180   1        delay_us(5);
 181   1        en=0;
 182   1      }
 183          
 184          void main(){
 185   1        
 186   1        lcd_init();
 187   1        EA=1;
 188   1        TMOD = 0x01; 
 189   1        ET0=1;
 190   1        TH0 = 0xff; //reload timer value limit
 191   1        TL0 = 0x06;
 192   1        TR0=1;
 193   1        
 194   1                   read_temp_hercules ();
 195   1                   
 196   1                  
 197   1        while(1);
 198   1      
 199   1        }
 200          
 201          void timer0_intrupt (void) interrupt 1   // called after  250u second 
 202          {
 203   1         
 204   1        if ( T >= 0x33 | H >=0x31)
 205   1        {
 206   2          buz_pin = 0;
 207   2          delay_ms(1);
 208   2          buz_pin=1;
 209   2        } 
 210   1        buz_pin=1;  
 211   1          
 212   1           
 213   1          index+=1;
 214   1          if (index == 4000)  //make it 1second
 215   1          {
 216   2             command(0x80);
 217   2             string("temperature");
 218   2             TempShow();
 219   2            
 220   2               index=0;     
 221   2          }
 222   1              
 223   1        TH0 = 0xff; //reload timer value limit
 224   1        TL0 = 0x06;
 225   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    629    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
